// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ehsm.proto

package ehsm_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DecryptRequest struct {
	Ciphertext           string   `protobuf:"bytes,1,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	Aad                  string   `protobuf:"bytes,2,opt,name=aad,proto3" json:"aad,omitempty"`
	Keyid                string   `protobuf:"bytes,3,opt,name=keyid,proto3" json:"keyid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptRequest) Reset()         { *m = DecryptRequest{} }
func (m *DecryptRequest) String() string { return proto.CompactTextString(m) }
func (*DecryptRequest) ProtoMessage()    {}
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16daa8162bea68c2, []int{0}
}

func (m *DecryptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptRequest.Unmarshal(m, b)
}
func (m *DecryptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptRequest.Marshal(b, m, deterministic)
}
func (m *DecryptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptRequest.Merge(m, src)
}
func (m *DecryptRequest) XXX_Size() int {
	return xxx_messageInfo_DecryptRequest.Size(m)
}
func (m *DecryptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptRequest proto.InternalMessageInfo

func (m *DecryptRequest) GetCiphertext() string {
	if m != nil {
		return m.Ciphertext
	}
	return ""
}

func (m *DecryptRequest) GetAad() string {
	if m != nil {
		return m.Aad
	}
	return ""
}

func (m *DecryptRequest) GetKeyid() string {
	if m != nil {
		return m.Keyid
	}
	return ""
}

type DecryptResponse struct {
	Plaintext            string   `protobuf:"bytes,1,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptResponse) Reset()         { *m = DecryptResponse{} }
func (m *DecryptResponse) String() string { return proto.CompactTextString(m) }
func (*DecryptResponse) ProtoMessage()    {}
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_16daa8162bea68c2, []int{1}
}

func (m *DecryptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptResponse.Unmarshal(m, b)
}
func (m *DecryptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptResponse.Marshal(b, m, deterministic)
}
func (m *DecryptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptResponse.Merge(m, src)
}
func (m *DecryptResponse) XXX_Size() int {
	return xxx_messageInfo_DecryptResponse.Size(m)
}
func (m *DecryptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptResponse proto.InternalMessageInfo

func (m *DecryptResponse) GetPlaintext() string {
	if m != nil {
		return m.Plaintext
	}
	return ""
}

type EncryptRequest struct {
	// The data to be encrypted.
	Plaintext string `protobuf:"bytes,1,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	// Some extra datas input by the user, which could help to to ensure data integrity,
	// and not be included in the cipherblobs. The aad stored in BASE64 string.
	Aad string `protobuf:"bytes,2,opt,name=aad,proto3" json:"aad,omitempty"`
	// keyid is a unique identifier for the request.
	Keyid                string   `protobuf:"bytes,3,opt,name=keyid,proto3" json:"keyid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptRequest) Reset()         { *m = EncryptRequest{} }
func (m *EncryptRequest) String() string { return proto.CompactTextString(m) }
func (*EncryptRequest) ProtoMessage()    {}
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16daa8162bea68c2, []int{2}
}

func (m *EncryptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptRequest.Unmarshal(m, b)
}
func (m *EncryptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptRequest.Marshal(b, m, deterministic)
}
func (m *EncryptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptRequest.Merge(m, src)
}
func (m *EncryptRequest) XXX_Size() int {
	return xxx_messageInfo_EncryptRequest.Size(m)
}
func (m *EncryptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptRequest proto.InternalMessageInfo

func (m *EncryptRequest) GetPlaintext() string {
	if m != nil {
		return m.Plaintext
	}
	return ""
}

func (m *EncryptRequest) GetAad() string {
	if m != nil {
		return m.Aad
	}
	return ""
}

func (m *EncryptRequest) GetKeyid() string {
	if m != nil {
		return m.Keyid
	}
	return ""
}

type EncryptResponse struct {
	// The encrypted data.
	// ciphertext must satisfy the following constraints:
	// 1. The ciphertext is not empty.
	// 2. The ciphertext is less than 1 kB.
	Ciphertext           string   `protobuf:"bytes,1,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptResponse) Reset()         { *m = EncryptResponse{} }
func (m *EncryptResponse) String() string { return proto.CompactTextString(m) }
func (*EncryptResponse) ProtoMessage()    {}
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_16daa8162bea68c2, []int{3}
}

func (m *EncryptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptResponse.Unmarshal(m, b)
}
func (m *EncryptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptResponse.Marshal(b, m, deterministic)
}
func (m *EncryptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptResponse.Merge(m, src)
}
func (m *EncryptResponse) XXX_Size() int {
	return xxx_messageInfo_EncryptResponse.Size(m)
}
func (m *EncryptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptResponse proto.InternalMessageInfo

func (m *EncryptResponse) GetCiphertext() string {
	if m != nil {
		return m.Ciphertext
	}
	return ""
}

func init() {
	proto.RegisterType((*DecryptRequest)(nil), "DecryptRequest")
	proto.RegisterType((*DecryptResponse)(nil), "DecryptResponse")
	proto.RegisterType((*EncryptRequest)(nil), "EncryptRequest")
	proto.RegisterType((*EncryptResponse)(nil), "EncryptResponse")
}

func init() { proto.RegisterFile("ehsm.proto", fileDescriptor_16daa8162bea68c2) }

var fileDescriptor_16daa8162bea68c2 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcd, 0x28, 0xce,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x8a, 0xe0, 0xe2, 0x73, 0x49, 0x4d, 0x2e, 0xaa, 0x2c,
	0x28, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe3, 0xe2, 0x4a, 0xce, 0x2c, 0xc8,
	0x48, 0x2d, 0x2a, 0x49, 0xad, 0x28, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x12, 0x11,
	0x12, 0xe0, 0x62, 0x4e, 0x4c, 0x4c, 0x91, 0x60, 0x02, 0x4b, 0x80, 0x98, 0x42, 0x22, 0x5c, 0xac,
	0xd9, 0xa9, 0x95, 0x99, 0x29, 0x12, 0xcc, 0x60, 0x31, 0x08, 0x47, 0x49, 0x9f, 0x8b, 0x1f, 0x6e,
	0x72, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x0c, 0x17, 0x67, 0x41, 0x4e, 0x62, 0x66, 0x1e,
	0x92, 0xc9, 0x08, 0x01, 0xa5, 0x30, 0x2e, 0x3e, 0xd7, 0x3c, 0x14, 0xa7, 0xe0, 0x55, 0x4f, 0xb4,
	0x43, 0x0c, 0xb9, 0xf8, 0xe1, 0xe6, 0x42, 0x1d, 0x42, 0xc0, 0x8f, 0x46, 0x65, 0x5c, 0x22, 0xde,
	0xa9, 0x95, 0xbe, 0x89, 0x79, 0x89, 0xe9, 0xa9, 0xb9, 0xa9, 0x79, 0x25, 0xc1, 0xa9, 0x45, 0x65,
	0x99, 0xc9, 0xa9, 0x42, 0x7a, 0x5c, 0xec, 0x50, 0x3f, 0x09, 0xf1, 0xeb, 0xa1, 0x86, 0x9b, 0x94,
	0x80, 0x1e, 0x9a, 0x77, 0x95, 0x18, 0x40, 0xea, 0xa1, 0x56, 0x0b, 0xf1, 0xeb, 0xa1, 0x7a, 0x4e,
	0x4a, 0x40, 0x0f, 0xcd, 0x55, 0x4a, 0x0c, 0x4e, 0x02, 0x51, 0x7c, 0x7a, 0xd6, 0xa0, 0xd8, 0x89,
	0x2f, 0x86, 0xd8, 0x98, 0xc4, 0x06, 0x8e, 0x26, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd4,
	0xae, 0xac, 0x27, 0xb4, 0x01, 0x00, 0x00,
}
